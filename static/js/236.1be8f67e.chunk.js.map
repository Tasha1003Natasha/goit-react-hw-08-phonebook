{"version":3,"file":"static/js/236.1be8f67e.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/ContactForm/ContactForm.module.css?b5b2","components/ContactForm/ContactForm.js","webpack://react-homework-template/./src/components/ContactList/ContactList.module.css?1ce0","components/ContactList/ContactList.js","webpack://react-homework-template/./src/components/Filter/Filter.module.css?fad1","components/Filter/Filter.js","views/ContactsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"ContactForm_form__dhl+T\",\"form__input\":\"ContactForm_form__input__VGD4-\",\"form__text\":\"ContactForm_form__text__jHm9U\",\"form__btn\":\"ContactForm_form__btn__WXQ4e\"};","import { useState } from 'react';\nimport styles from '../ContactForm/ContactForm.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { fetchAddContact } from 'redux/contacts/contacts-operations';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const items = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n\n      case 'number':\n        setNumber(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    const searchName = items.find(item => item.name === name);\n    if (searchName) {\n      alert(`${name}  is already in contacts`);\n    } else {\n      dispatch(fetchAddContact({ name, number }));\n    }\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <form onSubmit={handleSubmit}>\n      <div className={styles.form}>\n        <label className=\"form__label\">\n          <p className={styles.form__text}>Name</p>\n          <input\n            type=\"text\"\n            name=\"name\"\n            value={name}\n            className={styles.form__input}\n            onChange={handleChange}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n          />\n        </label>\n\n        <label className=\"form__label\">\n          <p className={styles.form__text}>Number</p>\n          <input\n            type=\"tel\"\n            name=\"number\"\n            value={number}\n            className={styles.form__input}\n            onChange={handleChange}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n          />\n        </label>\n      </div>\n      <button type=\"submit\" className={styles.form__btn}>\n        Add contact\n      </button>\n    </form>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"contact__list\":\"ContactList_contact__list__2jNwc\",\"contact__item\":\"ContactList_contact__item__PFoNH\",\"contact__btn\":\"ContactList_contact__btn__NK2ty\"};","import styles from '../ContactList/ContactList.module.css';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  fetchDeleteContact,\n  fetchContacts,\n} from 'redux/contacts/contacts-operations';\nimport { useEffect } from 'react';\n\nexport const ContactList = () => {\n  const filter = useSelector(state => state.contacts.filter);\n  const items = useSelector(state => state.contacts.items);\n  const dispatch = useDispatch();\n\n  /////////////////////////\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  /////////////////////////\n\n  const handleDelete = id => dispatch(fetchDeleteContact(id));\n\n  const getSubmitContacts = (items, filter) => {\n    return items.filter(({ name }) =>\n      name.toLowerCase().includes(filter.toLowerCase())\n    );\n  };\n\n  const contactList = getSubmitContacts(items, filter);\n\n  return (\n    <ul className={styles.contact__list}>\n      {contactList.map(({ id, name, number }) => {\n        return (\n          <li className={styles.contact__item} key={id}>\n            {name} : {number}\n            <button\n              onClick={() => handleDelete(id)}\n              type=\"button\"\n              className={styles.contact__btn}\n            >\n              Delete\n            </button>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"label__input\":\"Filter_label__input__wGd6-\",\"filter__input\":\"Filter_filter__input__toa89\",\"filter__text\":\"Filter_filter__text__aAasw\"};","import styles from '../Filter/Filter.module.css';\nimport { filterUser } from 'redux/contacts/contacts-slice';\nimport { useSelector, useDispatch } from 'react-redux';\n\nexport const Filter = () => {\n  const filter = useSelector(state => state.contacts.filter);\n  const dispatch = useDispatch();\n\n  const formSubmitFilter = event =>\n    dispatch(filterUser(event.currentTarget.value));\n\n  return (\n    <label className={styles.label__input}>\n      <p className={styles.filter__text}>Find contacts by name</p>\n      <input\n        type=\"text\"\n        name=\"name\"\n        value={filter}\n        className={styles.filter__input}\n        onChange={formSubmitFilter}\n      />\n    </label>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport '../index.css';\nimport { useSelector } from 'react-redux';\n\nconst ContactsView = () => {\n  const isLogin = useSelector(state => state.auth.isLoggerIn);\n\n  return (\n    <>\n      {isLogin && (\n        <div className=\"contacts-list\">\n          <h1 className=\"title\">Phonebook</h1>\n          <ContactForm />\n          <h2 className=\"title\">Contacts</h2>\n          <Filter />\n          <ContactList />\n        </div>\n      )}\n    </>\n  );\n};\n\nexport default ContactsView;\n"],"names":["ContactForm","useState","name","setName","number","setNumber","items","useSelector","state","contacts","dispatch","useDispatch","handleChange","event","target","value","reset","onSubmit","preventDefault","find","item","alert","fetchAddContact","className","styles","type","onChange","pattern","title","required","ContactList","filter","useEffect","fetchContacts","contactList","toLowerCase","includes","getSubmitContacts","map","id","onClick","fetchDeleteContact","handleDelete","Filter","filterUser","currentTarget","isLogin","auth","isLoggerIn"],"sourceRoot":""}