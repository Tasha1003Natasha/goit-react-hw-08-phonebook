{"version":3,"file":"static/js/745.d671bfbf.chunk.js","mappings":"0OAiGA,UAzFkB,WAChB,OAA0BA,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KACMC,GAAWC,EAAAA,EAAAA,MACXC,GAAYC,EAAAA,EAAAA,KAAY,SAAAC,GAAK,OAAIA,EAAMC,KAAKC,WAE5CC,EAAe,SAAAC,GACnB,MAAwBA,EAAMC,OAAtBC,EAAR,EAAQA,MAER,OAFA,EAAeC,MAGb,IAAK,QACHd,EAASa,GACT,MAEF,IAAK,WACHX,EAAYW,GACZ,MAEF,QACE,SAcN,OACE,iCACE,eACEE,MAAO,CACLC,UAAW,SACXC,UAAW,QAHf,yBAQA,UAAC,IAAD,CACEC,SArBe,SAAAP,GAEnB,GADAA,EAAMQ,iBACe,KAAjBpB,EAAMqB,QAAqC,KAApBnB,EAASmB,OAClC,OAAOC,EAAAA,GAAAA,MAAY,8BAErBlB,GAASmB,EAAAA,EAAAA,IAAM,CAAEvB,MAAAA,EAAOE,SAAAA,KACxBD,EAAS,IACTE,EAAY,KAeRqB,UAAU,OACVR,MAAO,CACLS,QAAS,OACTC,cAAe,SACfC,WAAY,UANhB,WASE,UAAC,UAAD,YACE,SAAC,UAAD,qBACA,SAAC,YAAD,CACEC,KAAK,QACLb,KAAK,QACLD,MAAOd,EACP6B,YAAY,cACZC,SAAUnB,EACVK,MAAO,CAAEe,MAAO,YAElB,SAAC,SAAD,CAAWP,UAAU,aAArB,+DAKF,UAAC,UAAD,CAAYA,UAAU,OAAtB,WACE,SAAC,UAAD,wBACA,SAAC,YAAD,CACEI,KAAK,WACLb,KAAK,WACLD,MAAOZ,EACP2B,YAAY,WACZC,SAAUnB,EACVK,MAAO,CAAEe,MAAO,eAIpB,SAAC,IAAD,CAAQC,QAAQ,UAAUJ,KAAK,SAA/B,oBAICtB,IAAa,SAAC,IAAD","sources":["views/LoginView.js"],"sourcesContent":["import Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logIn } from 'redux/auth/auth-operations';\nimport { toast } from 'react-toastify';\nimport { Loader } from 'components/Loader/Loader';\n\nconst LoginView = () => {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const dispatch = useDispatch();\n  const isLoading = useSelector(state => state.auth.loading);\n\n  const handleChange = event => {\n    const { value, name } = event.target;\n\n    switch (name) {\n      case 'email':\n        setEmail(value);\n        break;\n\n      case 'password':\n        setPassword(value);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (email.trim() === '' || password.trim() === '') {\n      return toast.error('Please fill in all fields!');\n    }\n    dispatch(logIn({ email, password }));\n    setEmail('');\n    setPassword('');\n  };\n\n  return (\n    <>\n      <h1\n        style={{\n          textAlign: 'center',\n          marginTop: '10px',\n        }}\n      >\n        Login View\n      </h1>\n      <Form\n        onSubmit={handleSubmit}\n        className=\"mb-3\"\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Form.Group>\n          <Form.Label>Email</Form.Label>\n          <Form.Control\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            placeholder=\"Enter email\"\n            onChange={handleChange}\n            style={{ width: '500px' }}\n          />\n          <Form.Text className=\"text-muted\">\n            We'll never share your email with anyone else\n          </Form.Text>\n        </Form.Group>\n\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            placeholder=\"Password\"\n            onChange={handleChange}\n            style={{ width: '500px' }}\n          />\n        </Form.Group>\n\n        <Button variant=\"primary\" type=\"submit\">\n          Log In\n        </Button>\n\n        {isLoading && <Loader />}\n      </Form>\n    </>\n  );\n};\n\nexport default LoginView;\n"],"names":["useState","email","setEmail","password","setPassword","dispatch","useDispatch","isLoading","useSelector","state","auth","loading","handleChange","event","target","value","name","style","textAlign","marginTop","onSubmit","preventDefault","trim","toast","logIn","className","display","flexDirection","alignItems","type","placeholder","onChange","width","variant"],"sourceRoot":""}